---
import "../../styles/globals.css";
import Layout from '../../layouts/Layout.astro';
import Icon from '../../components/Icon.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map(project => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project }: { project: CollectionEntry<'projects'> } = Astro.props;
const { Content } = await project.render();

// Get the journey info
const journeys = await getCollection('journeys');
const journey = journeys.find(j => j.slug === project.data.journey);

// Get related posts if any
const relatedPosts = project.data.relatedPosts 
  ? await Promise.all(
      project.data.relatedPosts.map(slug => 
        getCollection('learn').then(posts => 
          posts.find(p => p.slug === slug)
        )
      )
    ).then(posts => posts.filter(p => p !== undefined))
  : [];

const currentUrl = Astro.url.href;
---

<Layout 
  title={project.data.title}
  description={project.data.description}
  canonicalUrl={currentUrl}
  type="article"
>
  <article class="blog-container py-8 md:py-12">
    <!-- Breadcrumb Navigation -->
    <div class="mb-8 max-w-[65ch] mx-auto">
      <nav class="flex items-center gap-2 text-sm text-gray-400">
        <a href="/projects" class="hover:text-gray-200 transition-colors">Projects</a>
        <span>/</span>
        <span class="text-gray-500">{project.data.title}</span>
      </nav>
    </div>

    <!-- Project Header -->
    <div class="max-w-[65ch] mx-auto mb-12">
      {/* Journey & Status Badges */}
      <div class="flex flex-wrap items-center gap-2 mb-4">
        {journey && (
          <span 
            class="text-xs px-3 py-1 rounded-full font-medium flex items-center gap-1.5"
            style={`background-color: ${journey.data.color}20; color: ${journey.data.color}`}
          >
            {journey.data.title}
          </span>
        )}
        <span class={`text-xs px-3 py-1 rounded-full capitalize ${
          project.data.status === 'completed' ? 'bg-green-900/30 text-green-400' :
          project.data.status === 'in-progress' ? 'bg-yellow-900/30 text-yellow-400' :
          'bg-gray-800 text-gray-400'
        }`}>
          {project.data.status.replace('-', ' ')}
        </span>
        <span class="text-xs px-3 py-1 rounded-full bg-gray-800 text-gray-400 capitalize">
          {project.data.difficulty}
        </span>
      </div>

      <h1 class="text-4xl md:text-5xl font-bold mb-4">{project.data.title}</h1>
      <p class="text-xl text-gray-400 mb-6">{project.data.description}</p>
      
      {/* Links */}
      <div class="flex flex-wrap gap-3">
        {project.data.githubUrl && (
          <a 
            href={project.data.githubUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 px-4 py-2 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors text-sm"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
            View on GitHub
          </a>
        )}
        {project.data.liveUrl && (
          <a 
            href={project.data.liveUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 px-4 py-2 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors text-sm"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
            </svg>
            Live Demo
          </a>
        )}
        {project.data.docsUrl && (
          <a 
            href={project.data.docsUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 px-4 py-2 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors text-sm"
          >
            Documentation
          </a>
        )}
      </div>
    </div>

    {/* Tech Stack */}
    <div class="max-w-[65ch] mx-auto mb-12">
      <h2 class="text-sm font-semibold text-gray-400 mb-3">Tech Stack</h2>
      <div class="flex flex-wrap gap-2">
        {project.data.techStack.map(tech => (
          <span class="px-3 py-1 bg-gray-800 rounded-lg text-sm">
            {tech}
          </span>
        ))}
      </div>
    </div>

    {/* Problem Statement */}
    {project.data.problemStatement && (
      <div class="max-w-[65ch] mx-auto mb-12 p-6 bg-gray-900/50 border border-gray-800 rounded-lg">
        <h2 class="text-lg font-semibold mb-3 flex items-center gap-2">
          Problem Statement
        </h2>
        <p class="text-gray-300">{project.data.problemStatement}</p>
      </div>
    )}

    {/* Project Content */}
    <div class="max-w-[65ch] mx-auto mb-16 prose dark:prose-invert">
      <Content />
    </div>

    {/* Key Learnings */}
    {project.data.keyLearnings.length > 0 && (
      <div class="max-w-[65ch] mx-auto mb-12">
        <h2 class="text-2xl font-bold mb-6 flex items-center gap-2">
          Key Learnings
        </h2>
        <ul class="space-y-3">
          {project.data.keyLearnings.map(learning => (
            <li class="flex items-start gap-3">
              <span class="text-green-500 mt-1">✓</span>
              <span class="text-gray-300">{learning}</span>
            </li>
          ))}
        </ul>
      </div>
    )}

    {/* Challenges */}
    {project.data.challenges && project.data.challenges.length > 0 && (
      <div class="max-w-[65ch] mx-auto mb-12">
        <h2 class="text-2xl font-bold mb-6 flex items-center gap-2">
          Challenges
        </h2>
        <ul class="space-y-3">
          {project.data.challenges.map(challenge => (
            <li class="flex items-start gap-3">
              <span class="text-yellow-500 mt-1">⚠</span>
              <span class="text-gray-300">{challenge}</span>
            </li>
          ))}
        </ul>
      </div>
    )}

    {/* Future Improvements */}
    {project.data.improvements && project.data.improvements.length > 0 && (
      <div class="max-w-[65ch] mx-auto mb-12">
        <h2 class="text-2xl font-bold mb-6 flex items-center gap-2">
          Future Improvements
        </h2>
        <ul class="space-y-3">
          {project.data.improvements.map(improvement => (
            <li class="flex items-start gap-3">
              <span class="text-blue-500 mt-1">→</span>
              <span class="text-gray-300">{improvement}</span>
            </li>
          ))}
        </ul>
      </div>
    )}

    {/* Related Learning Posts */}
    {relatedPosts.length > 0 && (
      <div class="max-w-[65ch] mx-auto mb-16">
        <h2 class="text-2xl font-bold mb-6 flex items-center gap-2">
          Related Learning
        </h2>
        <ul class="space-y-4">
          {relatedPosts.map(post => post && (
            <li>
              <a 
                href={`/learn/${post.data.journey}/${post.slug}`}
                class="block p-4 border border-gray-800 rounded-lg hover:border-gray-700 transition-all group"
              >
                <h3 class="font-medium mb-1 group-hover:text-gray-300 transition-colors">
                  {post.data.title}
                </h3>
                <p class="text-sm text-gray-500">{post.data.description}</p>
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}

    {/* Back to Journey */}
    {journey && (
      <div class="max-w-[65ch] mx-auto text-center">
        <a 
          href={`/learn/${journey.slug}`}
          class="inline-flex items-center gap-2 px-6 py-3 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors"
        >
          View all {journey.data.title} projects
        </a>
      </div>
    )}
  </article>
</Layout>
